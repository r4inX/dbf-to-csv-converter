name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Generate changelog
      id: changelog
      run: echo "CHANGELOG=Release ${{ github.ref_name }} - Package improvements and bug fixes" >> $GITHUB_OUTPUT

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref_name }}
        body: ${{ steps.changelog.outputs.CHANGELOG }}
        draft: false
        prerelease: ${{ contains(github.ref_name, 'alpha') || contains(github.ref_name, 'beta') || contains(github.ref_name, 'rc') }}
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Create source distribution
      run: |
        python -m pip install --upgrade pip build
        python -m build --sdist
        
        # Create a zip file for easy download
        zip -r dbf-to-csv-converter-${{ github.ref_name }}.zip . \
          -x "*.git*" "*__pycache__*" "*.pyc" "*/.*" "build/*" "dist/*" "*.egg-info/*" \
          "DAT_COVER*" "tests/__pycache__*" "SETUP.md"
        
    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dbf-to-csv-converter-${{ github.ref_name }}.zip
        asset_name: dbf-to-csv-converter-${{ github.ref_name }}.zip
        asset_content_type: application/zip